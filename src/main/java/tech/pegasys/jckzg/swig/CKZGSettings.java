/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package tech.pegasys.jckzg.swig;

public class CKZGSettings {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected CKZGSettings(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CKZGSettings obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        CKzgJNI.delete_CKZGSettings(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public CKZGSettings(CFFTSettings fft_settings, G1Vector g1_secrets, G2Vector g2_secrets) {
    this(CKzgJNI.new_CKZGSettings(CFFTSettings.getCPtr(fft_settings), fft_settings, G1Vector.getCPtr(g1_secrets), g1_secrets, G2Vector.getCPtr(g2_secrets), g2_secrets), true);
  }

  public void aaabbb() {
    CKzgJNI.CKZGSettings_aaabbb(swigCPtr, this);
  }

  public G1 commit_to_poly(Poly poly) {
    return new G1(CKzgJNI.CKZGSettings_commit_to_poly(swigCPtr, this, Poly.getCPtr(poly), poly), true);
  }

  public G1 compute_proof_single(Poly poly, Fr x0) {
    return new G1(CKzgJNI.CKZGSettings_compute_proof_single(swigCPtr, this, Poly.getCPtr(poly), poly, Fr.getCPtr(x0), x0), true);
  }

  public G1 compute_proof_poly(Poly poly, FrVector x0) {
    return new G1(CKzgJNI.CKZGSettings_compute_proof_poly(swigCPtr, this, Poly.getCPtr(poly), poly, FrVector.getCPtr(x0), x0), true);
  }

  public boolean check_proof_single(G1 commitment, G1 proof, Fr x, Fr y) {
    return CKzgJNI.CKZGSettings_check_proof_single(swigCPtr, this, G1.getCPtr(commitment), commitment, G1.getCPtr(proof), proof, Fr.getCPtr(x), x, Fr.getCPtr(y), y);
  }

  public boolean check_proof_multi(G1 commitment, G1 proof, Fr x, FrVector ys) {
    return CKzgJNI.CKZGSettings_check_proof_multi(swigCPtr, this, G1.getCPtr(commitment), commitment, G1.getCPtr(proof), proof, Fr.getCPtr(x), x, FrVector.getCPtr(ys), ys);
  }

}
