/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package tech.pegasys.jckzg.swig;

public class CKzgJNI {
  public final static native long new_G1Vector__SWIG_0();
  public final static native long new_G1Vector__SWIG_1(long jarg1, G1Vector jarg1_);
  public final static native long G1Vector_capacity(long jarg1, G1Vector jarg1_);
  public final static native void G1Vector_reserve(long jarg1, G1Vector jarg1_, long jarg2);
  public final static native boolean G1Vector_isEmpty(long jarg1, G1Vector jarg1_);
  public final static native void G1Vector_clear(long jarg1, G1Vector jarg1_);
  public final static native long new_G1Vector__SWIG_2(int jarg1, long jarg2, G1 jarg2_);
  public final static native int G1Vector_doSize(long jarg1, G1Vector jarg1_);
  public final static native void G1Vector_doAdd__SWIG_0(long jarg1, G1Vector jarg1_, long jarg2, G1 jarg2_);
  public final static native void G1Vector_doAdd__SWIG_1(long jarg1, G1Vector jarg1_, int jarg2, long jarg3, G1 jarg3_);
  public final static native long G1Vector_doRemove(long jarg1, G1Vector jarg1_, int jarg2);
  public final static native long G1Vector_doGet(long jarg1, G1Vector jarg1_, int jarg2);
  public final static native long G1Vector_doSet(long jarg1, G1Vector jarg1_, int jarg2, long jarg3, G1 jarg3_);
  public final static native void G1Vector_doRemoveRange(long jarg1, G1Vector jarg1_, int jarg2, int jarg3);
  public final static native void delete_G1Vector(long jarg1);
  public final static native long new_G2Vector__SWIG_0();
  public final static native long new_G2Vector__SWIG_1(long jarg1, G2Vector jarg1_);
  public final static native long G2Vector_capacity(long jarg1, G2Vector jarg1_);
  public final static native void G2Vector_reserve(long jarg1, G2Vector jarg1_, long jarg2);
  public final static native boolean G2Vector_isEmpty(long jarg1, G2Vector jarg1_);
  public final static native void G2Vector_clear(long jarg1, G2Vector jarg1_);
  public final static native long new_G2Vector__SWIG_2(int jarg1, long jarg2, G2 jarg2_);
  public final static native int G2Vector_doSize(long jarg1, G2Vector jarg1_);
  public final static native void G2Vector_doAdd__SWIG_0(long jarg1, G2Vector jarg1_, long jarg2, G2 jarg2_);
  public final static native void G2Vector_doAdd__SWIG_1(long jarg1, G2Vector jarg1_, int jarg2, long jarg3, G2 jarg3_);
  public final static native long G2Vector_doRemove(long jarg1, G2Vector jarg1_, int jarg2);
  public final static native long G2Vector_doGet(long jarg1, G2Vector jarg1_, int jarg2);
  public final static native long G2Vector_doSet(long jarg1, G2Vector jarg1_, int jarg2, long jarg3, G2 jarg3_);
  public final static native void G2Vector_doRemoveRange(long jarg1, G2Vector jarg1_, int jarg2, int jarg3);
  public final static native void delete_G2Vector(long jarg1);
  public final static native long new_FrVector__SWIG_0();
  public final static native long new_FrVector__SWIG_1(long jarg1, FrVector jarg1_);
  public final static native long FrVector_capacity(long jarg1, FrVector jarg1_);
  public final static native void FrVector_reserve(long jarg1, FrVector jarg1_, long jarg2);
  public final static native boolean FrVector_isEmpty(long jarg1, FrVector jarg1_);
  public final static native void FrVector_clear(long jarg1, FrVector jarg1_);
  public final static native long new_FrVector__SWIG_2(int jarg1, long jarg2, Fr jarg2_);
  public final static native int FrVector_doSize(long jarg1, FrVector jarg1_);
  public final static native void FrVector_doAdd__SWIG_0(long jarg1, FrVector jarg1_, long jarg2, Fr jarg2_);
  public final static native void FrVector_doAdd__SWIG_1(long jarg1, FrVector jarg1_, int jarg2, long jarg3, Fr jarg3_);
  public final static native long FrVector_doRemove(long jarg1, FrVector jarg1_, int jarg2);
  public final static native long FrVector_doGet(long jarg1, FrVector jarg1_, int jarg2);
  public final static native long FrVector_doSet(long jarg1, FrVector jarg1_, int jarg2, long jarg3, Fr jarg3_);
  public final static native void FrVector_doRemoveRange(long jarg1, FrVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_FrVector(long jarg1);
  public final static native long new_LongVector__SWIG_0();
  public final static native long new_LongVector__SWIG_1(long jarg1, LongVector jarg1_);
  public final static native long LongVector_capacity(long jarg1, LongVector jarg1_);
  public final static native void LongVector_reserve(long jarg1, LongVector jarg1_, long jarg2);
  public final static native boolean LongVector_isEmpty(long jarg1, LongVector jarg1_);
  public final static native void LongVector_clear(long jarg1, LongVector jarg1_);
  public final static native long new_LongVector__SWIG_2(int jarg1, long jarg2);
  public final static native int LongVector_doSize(long jarg1, LongVector jarg1_);
  public final static native void LongVector_doAdd__SWIG_0(long jarg1, LongVector jarg1_, long jarg2);
  public final static native void LongVector_doAdd__SWIG_1(long jarg1, LongVector jarg1_, int jarg2, long jarg3);
  public final static native long LongVector_doRemove(long jarg1, LongVector jarg1_, int jarg2);
  public final static native long LongVector_doGet(long jarg1, LongVector jarg1_, int jarg2);
  public final static native long LongVector_doSet(long jarg1, LongVector jarg1_, int jarg2, long jarg3);
  public final static native void LongVector_doRemoveRange(long jarg1, LongVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_LongVector(long jarg1);
  public final static native long new_CFFTSettings(long jarg1);
  public final static native void delete_CFFTSettings(long jarg1);
  public final static native long CFFTSettings_das_fft_extentions(long jarg1, CFFTSettings jarg1_, long jarg2, FrVector jarg2_);
  public final static native long CFFTSettings_recover_poly_from_samples(long jarg1, CFFTSettings jarg1_, long jarg2, FrVector jarg2_);
  public final static native long CFFTSettings_do_zero_poly_mul_partial(long jarg1, CFFTSettings jarg1_, long jarg2, LongVector jarg2_, long jarg3);
  public final static native long new_CKZGSettings(long jarg1, CFFTSettings jarg1_, long jarg2, G1Vector jarg2_, long jarg3, G2Vector jarg3_);
  public final static native void delete_CKZGSettings(long jarg1);
  public final static native void CKZGSettings_aaabbb(long jarg1, CKZGSettings jarg1_);
  public final static native long CKZGSettings_commit_to_poly(long jarg1, CKZGSettings jarg1_, long jarg2, Poly jarg2_);
  public final static native long CKZGSettings_compute_proof_single(long jarg1, CKZGSettings jarg1_, long jarg2, Poly jarg2_, long jarg3, Fr jarg3_);
  public final static native long CKZGSettings_compute_proof_poly(long jarg1, CKZGSettings jarg1_, long jarg2, Poly jarg2_, long jarg3, FrVector jarg3_);
  public final static native boolean CKZGSettings_check_proof_single(long jarg1, CKZGSettings jarg1_, long jarg2, G1 jarg2_, long jarg3, G1 jarg3_, long jarg4, Fr jarg4_, long jarg5, Fr jarg5_);
  public final static native boolean CKZGSettings_check_proof_multi(long jarg1, CKZGSettings jarg1_, long jarg2, G1 jarg2_, long jarg3, G1 jarg3_, long jarg4, Fr jarg4_, long jarg5, FrVector jarg5_);
  public final static native long Fr_from_jlongs(long[] jarg1);
  public final static native void delete_Fr(long jarg1);
  public final static native long G1_from_compressed(byte[] jarg1);
  public final static native void delete_G1(long jarg1);
  public final static native long G2_from_compressed(byte[] jarg1);
  public final static native void delete_G2(long jarg1);
  public final static native long new_Poly__SWIG_0(int jarg1);
  public final static native long new_Poly__SWIG_1(long jarg1, FrVector jarg1_);
  public final static native void delete_Poly(long jarg1);
  public final static native long Poly_long_div(long jarg1, Poly jarg1_, long jarg2, Poly jarg2_);
  public final static native long Poly_eval(long jarg1, Poly jarg1_, long jarg2, Fr jarg2_);
}
